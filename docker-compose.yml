services:
  dhis2:
    image: "${DHIS2_IMAGE:-dhis2/core:42.1.0}"
    restart: unless-stopped
    volumes:
      - ./config/dhis2/dhis.conf:/opt/dhis2/dhis.conf:ro
    environment:
      JAVA_OPTS: "-Dcontext.path='${DHIS2_CORE_CONTEXT_PATH:-}' -Dlog4j2.configurationFile=/opt/dhis2/log4j2.xml"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -q -S -O /dev/null http://127.0.0.1:8080/dhis-web-login/ 2>&1| grep -q 'HTTP.*200'" ]
      start_period: 120s
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    networks:
      - default
      - middleware
      - db

  db:
    image: ghcr.io/baosystems/postgis:13-3.4
    volumes:
      - ./db-dump:/docker-entrypoint-initdb.d/:ro
    environment:
      POSTGRES_USER: dhis
      POSTGRES_DB: dhis
      POSTGRES_PASSWORD: &postgres_password dhis
      PGPASSWORD: *postgres_password # needed by psql in healthcheck
    healthcheck:
      test: [ "CMD-SHELL", "psql --no-password --quiet --username $$POSTGRES_USER postgres://127.0.0.1/$$POSTGRES_DB -p 5432 --command \"SELECT 'ok'\" > /dev/null" ]
      start_period: 120s
      interval: 1s
      timeout: 3s
      retries: 5
    security_opt:
      - no-new-privileges:true
    networks:
      - db

  gateway:
    image: nginx
    restart: always
    depends_on:
      seed:
        condition: service_completed_successfully
    ports:
      - "${DHIS2_PORT:-8080}:80"
    volumes:
      - ./config/gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    security_opt:
      - no-new-privileges:true

  civil-registry:
    image: "hapiproject/hapi:v7.4.0-tomcat"
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo -n '' > /dev/tcp/127.0.0.1/8080" ]
      start_period: 60s
      interval: 5s
      timeout: 1s
      retries: 5
    networks:
      - civil-registry

  identity-provider:
    image: "quay.io/keycloak/keycloak:25.0.6"
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      KC_HEALTH_ENABLED: "true"

      # comment KC_HOSTNAME and KC_HOSTNAME_BACKCHANNEL_DYNAMIC to test Keycloak from Docker host
      KC_HOSTNAME: "http://identity-provider:8080"
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: "true"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/localhost/9000 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'"
        ]
      start_period: 120s
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./config/identity-provider/civil-registry-realm.json:/opt/keycloak/data/import/civil-registry-realm.json:ro
    command: [ "start-dev", "--import-realm" ]
    security_opt:
      - no-new-privileges:true
    networks:
      - auth

  auth-proxy:
    image: "quay.io/oauth2-proxy/oauth2-proxy:v7.6.0"
    command: --config /oauth2-proxy.cfg
    volumes:
      - "./config/auth-proxy/oauth2-proxy-keycloak.cfg:/oauth2-proxy.cfg"
    depends_on:
      identity-provider:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    networks:
      - auth
      - civil-registry

  oauth-route-middleware:
    build: ./oauth-route-middleware
    restart: always
    environment:
      CIVIL_REGISTRY_URL: http://auth-proxy:4180/fhir
      OAUTH2_TOKENENDPOINT: http://identity-provider:8080/realms/civil-registry/protocol/openid-connect/token
      OAUTH2_CLIENTID: civil-registry-client
      OAUTH2_CLIENTSECRET: ibz2lEXdGe02CJS2N7tY13r6664eJpoX
    depends_on:
      identity-provider:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    networks:
      - middleware
      - auth

  seed:
    image: curlimages/curl
    command:
      - "/bin/sh"
      - "-c"
      - |
        curl -X POST -s --max-time 0 -H "Content-Type: application/json" -d @/persons.json http://civil-registry:8080/fhir
        curl -X PATCH -s --max-time 0 -H "Authorization: Basic YWRtaW46ZGlzdHJpY3Q=" -H "Content-Type: application/json" -d @/roles.json http://dhis2:8080/userRoles/yrB6vc5Ip3r
        curl -X POST -s --max-time 0 -H "Authorization: Basic YWRtaW46ZGlzdHJpY3Q=" -H "Content-Type: application/json" -d @/nehr-route.json http://dhis2:8080/api/routes
        curl -X POST -s --max-time 0 -H "Authorization: Basic YWRtaW46ZGlzdHJpY3Q=" -H "Content-Type: application/json" -d @/relying-party-service-route.json http://dhis2:8080/api/routes
        curl -X POST -s --max-time 0 -H "Authorization: Basic YWRtaW46ZGlzdHJpY3Q=" -H "Content-Type: application/json" -d @/pluginConfig.json http://dhis2:8080/api/dataStore/capture/dataEntryForms
        curl -X POST -s --max-time 0 -H "Authorization: Basic YWRtaW46ZGlzdHJpY3Q=" -H "Content-Type: application/json" http://dhis2:8080/api/appHub/e66cece4-8582-4329-81c2-043869cf1614
        curl -X POST -s --max-time 0 -H "Authorization: Basic YWRtaW46ZGlzdHJpY3Q=" -H "Content-Type: application/json" -d @/personMap.json http://dhis2:8080/api/dataStore/civilRegistryPlugin/personMap
        curl -X POST -s --max-time 0 -H "Authorization: Basic YWRtaW46ZGlzdHJpY3Q=" -H "Content-Type: application/json" -d '["http://localhost:*"]' http://dhis2:8080/api/configuration/corsWhitelist

      # ls /civil-registry-plugin/*.zip | head -1 | xargs -0 -I '{}' wget --quiet --timeout=0 --header 'Authorization: Basic YWRtaW46ZGlzdHJpY3Q=' --post-file '{}' 'http://dhis2:8080/api/apps'
      # ls /route-manager-app/*.zip | head -1 | xargs -0 -I '{}' wget --quiet --timeout=0 --header 'Authorization: Basic YWRtaW46ZGlzdHJpY3Q=' --post-file {} 'http://dhis2:8080/api/apps'
    volumes:
      - ./config/civil-registry/persons.json:/persons.json:ro
      - ./config/dhis2/roles.json:/roles.json:ro
      - ./config/dhis2/nehr-route.json:/nehr-route.json:ro
      - ./config/dhis2/relying-party-service-route.json:/relying-party-service-route.json:ro
      - ./config/dhis2/pluginConfig.json:/pluginConfig.json:ro
      - ./config/dhis2/personMap.json:/personMap.json:ro
      #- ./civil-registry-plugin/build/bundle/:/civil-registry-plugin/:ro
      #- ./route-manager-app/build/bundle/:/route-manager-app/:ro
    depends_on:
      civil-registry:
        condition: service_healthy
      dhis2:
        condition: service_healthy
    networks:
      - default
      - civil-registry

  mock-relying-party-service:
    image: 'mosipid/mock-relying-party-service:0.11.1'
    user: root
    ports:
      - 8888:8888
    environment:
      - ESIGNET_SERVICE_URL=http://esignet:8088/v1/esignet
      - ESIGNET_AUD_URL=http://esignet:8088/v1/esignet/oauth/v2/token
      - CLIENT_PRIVATE_KEY=ewogICJrdHkiOiAiUlNBIiwKICAibiI6ICJyTGVZal9nWVIyUkpGOUdkR1ZNMm5LXzF2ZFpjNTNWclc0eGVGU2dDYWYxY2FkV2xpTk9YZmluNE1aOVJDN0RFTWJ0R0FGWGN5dHdudnZLb1VZOG9pU09ZazdHazRITUZtVXpiRXJYa2NvT2c2QnJYRDF0dVV6WDJKbzV5Q2pOa25wTS1GRTNJbGxydV9JdTR3MEZwd1hkNHBOa3BmbXpvd2RFNTJKdG96UE5qLWtwQ1FoejhyUjRVQ1FEM1JZcWFhaks3M3A3aEVNaXk5R0lrZHdSdWdZZUczZG8tWjFRcjF1Z1Y2TEtUZ1JOWloxVmdicDdfMXl4TmljT1BKRGxxa3kxb2RISkVGN21YV2V1Sk9QWUZreVRnTXZJbmk2ck5nVTRVYkVWQVMtN3RDNW1KVVE4Nk5TaWE1UW11THVVbDNvQVFpNVdRZFpiNG1UN1h1R0RiSnciLAogICJlIjogIkFRQUIiLAogICJkIjogIkh1X244T25VbDMwY0pwc1NVOFgzQTB2MWJhS25FNEtSejEwdVFRWGdvTkdVS3hUc3lMeDE1MUJuTjZRODVTWXRqbWJvSEFsRk9rVUREWTN6bm1CUk4zZGJ6aURFMHJ0bnBsVUE3TElPRUlFSlltbmtXY2piMHlYWVNJRzlaWnhkQ3BaX1NTM0JuMFQ4aDlvVEowNWhQaGxEVC12aUpkWW1Qd2xXSGptQUpTMnNLenJfVjh2a3RneWtvZUlvTjl1UDBzQ1pnS285QjN4YkVOTzlfVzJmRlN0Q1BfRkM1NndsUkRQZkl1ZWx4eE40YnYyd1BCcWdzWmFzTHFzVThmRGF6MFZWSUhHM1NHNFMzeDBfOVRzN0dtbGpDNVFham9pU24tYVNDTjBmcktMZDVCLWFfbWdtVmlaVzJpYmpQYWpKX0h5dFpfS2hzOFVUa2hsU3NEUTRxUSIsCiAgInAiOiAiM2VfWGV0Q09rYy1CODEyQjNUNzhBMVo0c2dONTdfdzYxYy1oOHVzTFR6b2h4eFZJamI0MExVbThEdWVRVlgtNzhFaktuOFNfbDBodHdKYzlSeUpmNmtCOF9ZZDBmZUxjTkRwVFJZM0NndFc5eXdfcWFKT083ZjI3bnhaZXNuamRPMENSNkFDcHMzT0ZUcDZVR0dQNFk5U2tCeVhvSGZEYmNGUXg1bE9UU2QwIiwKICAicSI6ICJ4em5heEdxMEhKNy1EUWdURmc1cG5JQVVaMkllRkRmcTh0d29RMzJoMWpwVHhVQzMxY0hFT3FWUFhzTm1xT1A3b2diM0hDRWVzdG4tbXNtc1RPbllBSUZ4RHNzVmRwcjdkQkJaUFJnYXdIRUZodWg1TlU0dVRBX21hMUQ5aktGYmtUd0d0aThIR3RoNlFZTnEyT0lFdTNmb2cxVDQyQkZsanlLajhabXdRdE0iLAogICJkcCI6ICIxNGg3UFh5WldLV3JVRXQ1T1FKWUFHM1QzUjFmS0Y5T1RDTE81bmk1alFHcG1BdmxZREpkdmJXai10Mkw0RnlpaWlKSEZZNGZlcTRPV0VFSWM3TEFiMkNkZ2lJd1Vha2xyVnNQVDdieU5kbVo3a0RRcHlyV1hlNVNiWmR0OC1sSkFLZ2VpcTlLSDBxTEplVF9jZ2gwUzQ5UWxOaU5hYlpsaGR0ZWNvNnJ0Y2siLAogICJkcSI6ICJIS3ptSVNsZW5WUUJLeTBEV2tSZXpTamVSdmNuYnktUlFMMlJpZzFXTXZpWVFDY05qdFhpQWJMemxxYzNhbzNPRlVjOVlDNGdOZ3dNaW9rR3BOZHZ3THJnNUFrMUlLbzBFVU9kSko4SWtyUng0RFlyNUJGSnRxYl9PbWtnNVpJQUZRcDN5TmRDQllvdEpxcmN3VFRmQzRDNTFkVndMLUZwSmM0Tm5PUExMQU0iLAogICJxaSI6ICJpTU16MHFYMnl6RXVmWXNqZk1pYVRkbzZDUnZ5ZGtqcXVpTVZTYW9KLTk0V2NfSVB6bFlTbVgzekU2Z0pPd0xBa3pub3pjYWF4R3lBMzY4ZmtIUzNHbGVfWUlTZ3hxa2EtSTZtR1hOcXV2b0tsU3d2WURpMFZtTlZNckM0RVVsQVNRQjdEMDBWU1dfQkN6VkJJeFQ4QV9wRVlSNXdWT0VoWE55VHdMTjBWUlEiCn0=

    depends_on:
      esignet:
        condition: service_healthy

volumes:
  db-dump: { }
  files:
    driver: local
  postgresql:
    driver: local

networks:
  civil-registry:
    internal: true
  auth:
    internal: true
  middleware:
    internal: true
  db:
    internal: true