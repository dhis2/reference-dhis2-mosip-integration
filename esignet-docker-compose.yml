services:
  esignet-db:
    image: 'postgres:bookworm'
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./config/esignet/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - esignet

  redis:
    image: redis:6.0
    container_name: redis-server
    restart: always
    networks:
      - esignet

  mock-identity-system:
    image: 'mosipid/mock-identity-system:0.11.1'
    restart: always
    user: root
    environment:
      - container_user=mosip
      - active_profile_env=default,local
      - SPRING_DATASOURCE_URL=jdbc:postgresql://esignet-db:5432/mosip_mockidentitysystem?currentSchema=mockidentitysystem
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - MOSIP_MOCK_IDA_KYC_TRANSACTION_TIMEOUT_SECS=900
      - MOSIP_ESIGNET_HOST=localhost:8088
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo -n '' > /dev/tcp/127.0.0.1/8082" ]
      start_period: 120s
      interval: 5s
      retries: 20
    depends_on:
      - esignet-db
    networks:
      - esignet

  esignet:
    image: 'mosipid/esignet-with-plugins:1.6.1'
    restart: always
    user: root
    environment:
      - container_user=mosip
      - active_profile_env=default,local
      - plugin_name_env=esignet-mock-plugin.jar
      - SPRING_DATASOURCE_URL=jdbc:postgresql://esignet-db:5432/mosip_esignet?currentSchema=esignet
      - MOSIP_ESIGNET_MOCK_DOMAIN_URL=http://mock-identity-system:8082
      - MOSIP_ESIGNET_INTEGRATION_KEY_BINDER=MockKeyBindingWrapperService
      - SPRING_CACHE_TYPE=redis
      - SPRING_REDIS_HOST=redis-server
      - SPRING_REDIS_PASSWORD=
      - KAFKA_ENABLED=false
      - SPRING_AUTOCONFIGURE_EXCLUDE=org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo -n '' > /dev/tcp/127.0.0.1/8088" ]
      start_period: 120s
      interval: 5s
      retries: 20
    depends_on:
      - esignet-db
      - mock-identity-system
      - redis
    networks:
      - esignet

  esignet-ui:
    image: 'mosipid/oidc-ui:1.6.1'
    restart: always
    user: root
    ports:
      - 4000:4000
    environment:
      - container_user=mosip
      - DEFAULT_WELLKNOWN=%5B%7B%22name%22%3A%22OpenID%20Configuration%22%2C%22value%22%3A%22%2F.well-known%2Fopenid-configuration%22%7D%2C%7B%22name%22%3A%22Jwks%20Json%22%2C%22value%22%3A%22%2F.well-known%2Fjwks.json%22%7D%2C%7B%22name%22%3A%22Authorization%20Server%22%2C%22value%22%3A%22%2F.well-known%2Foauth-authorization-server%22%7D%5D
      - SIGN_IN_WITH_ESIGNET_PLUGIN_URL=https://raw.githubusercontent.com/mosip/artifactory-ref-impl/master/artifacts/src/mosip-plugins/sign-in-with-esignet/sign-in-with-esignet.zip
    volumes:
      - ./config/esignet/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - esignet
    networks:
      - esignet
      - default

  create-oidc-client:
    image: curlimages/curl
    user: root
    command:
      - "/bin/sh"
      - "-c"
      - |
        apk add jq
        body=$(cat /create-oidc-client.json | sed "s/<ISO_TIMESTAMP>/$(date -u +%FT%T.%3SZ)/g")
        curl --header "X-XSRF-TOKEN: $(curl --location 'http://esignet:8088/v1/esignet/csrf/token' | jq -r '.token')" --header 'Content-Type: application/json' -d "$$body" http://esignet:8088/v1/esignet/client-mgmt/client
    volumes:
      - ./config/esignet/create-oidc-client.json:/create-oidc-client.json:ro
    depends_on:
      esignet:
        condition: service_healthy
    networks:
      - esignet

  create-user:
    image: curlimages/curl
    command:
      - "/bin/sh"
      - "-c"
      - |
        body=$(cat /create-user.json | sed "s/<ISO_TIMESTAMP>/$(date -u +%FT%T.%3SZ)/g")
        curl --header 'Content-Type: application/json' -d "$$body" http://mock-identity-system:8082/v1/mock-identity-system/identity
    volumes:
      - ./config/esignet/create-user.json:/create-user.json:ro
    depends_on:
      mock-identity-system:
        condition: service_healthy
    networks:
      - esignet

networks:
  esignet:
    internal: true